[{"/Users/shariezell/Desktop/Portfolio/task-list/src/App.js":"1","/Users/shariezell/Desktop/Portfolio/task-list/src/index.js":"2","/Users/shariezell/Desktop/Portfolio/task-list/src/components/TodoForm.js":"3","/Users/shariezell/Desktop/Portfolio/task-list/src/components/TodoList.js":"4","/Users/shariezell/Desktop/Portfolio/task-list/src/components/Todo.js":"5"},{"size":172,"mtime":1611194302153,"results":"6","hashOfConfig":"7"},{"size":199,"mtime":1611194199637,"results":"8","hashOfConfig":"7"},{"size":1356,"mtime":1611194821623,"results":"9","hashOfConfig":"7"},{"size":1177,"mtime":1611194804584,"results":"10","hashOfConfig":"7"},{"size":1117,"mtime":1611196661746,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1x7qw9g",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/shariezell/Desktop/Portfolio/task-list/src/App.js",[],"/Users/shariezell/Desktop/Portfolio/task-list/src/index.js",[],"/Users/shariezell/Desktop/Portfolio/task-list/src/components/TodoForm.js",[],"/Users/shariezell/Desktop/Portfolio/task-list/src/components/TodoList.js",["23"],"import React, { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport Todo from './Todo';\n\nfunction TodoList() {\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n\n    setTodos(newTodos);\n    console.log(...todos);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!newValue.text || /^\\s*$/.test(newValue.text)) {\n      return;\n    }\n\n    setTodos(prev => prev.map(item => (item.id === todoId ? newValue : item)));\n  };\n\n  const removeTodo = id => {\n    const removedArr = [...todos].filter(todo => todo.id !== id);\n\n    setTodos(removedArr);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  return (\n    <div>\n      <h1></h1>\n      <TodoForm onSubmit={addTodo} />\n      <Todo\n        todos={todos}\n        completeTodo={completeTodo}\n        removeTodo={removeTodo}\n        updateTodo={updateTodo}\n      />\n    </div>\n  );\n}\n\nexport default TodoList;","/Users/shariezell/Desktop/Portfolio/task-list/src/components/Todo.js",[],{"ruleId":"24","severity":1,"message":"25","line":45,"column":7,"nodeType":"26","endLine":45,"endColumn":11},"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement"]